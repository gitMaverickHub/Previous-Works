// Maverick Boyle 426005784

//Fibonacci Number Generator
//Given two initial numbers f0 and f1, the sequence will be generated

CHIP Fibonacci {
	IN f0[16], f1[16], msel, enable1, enable2;
	OUT out[16];

	PARTS:
	Mux16(a=f0,b=sum,sel=msel,out=Mux1);
	Register(in=Mux1,load=enable1,out=reg1);
	Mux16(a=f1,b=reg1,sel=msel,out=Mux2);
	Register(in=Mux2,load=enable2,out=reg2);
	Add16(a=reg1,b=reg2,out=sum,out=out);
}

//The msel being 1 allows the muxs to output the updated numbers rather than keep putting the original numbers into the registers,
//and the enables allow the registers to be updated, the register hold the values that are being added together to make the new sum.
//First, register 1 holds 0 and register 2 holds 1 since msel is 0, the muxs output the "a" pin. After that, msel stays 1 so the muxs
//out is from the "b" pin which is the updated numbers. Register 1 holds the new sum and is adder with register 2 which holds the old sum
//to make the new sum, and immediately after, register 2 is updated to hold the value in register 1. Then, register 1 is updated with the
//new sum and the cycle continues.