// Maverick Boyle 426005784

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */
 
// CREATE THE RAM 512 using RAM64 Modules

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[6..8],a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h);
    RAM64(in=in,load=a,address=address[0..5],out=reg1);
    RAM64(in=in,load=b,address=address[0..5],out=reg2);
    RAM64(in=in,load=c,address=address[0..5],out=reg3);
    RAM64(in=in,load=d,address=address[0..5],out=reg4);
    RAM64(in=in,load=e,address=address[0..5],out=reg5);
    RAM64(in=in,load=f,address=address[0..5],out=reg6);
    RAM64(in=in,load=g,address=address[0..5],out=reg7);
    RAM64(in=in,load=h,address=address[0..5],out=reg8);
    Mux8Way16(a=reg1,b=reg2,c=reg3,d=reg4,e=reg5,f=reg6,g=reg7,h=reg8,sel=address[6..8],out=out);
}